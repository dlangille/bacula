#
# Copyright (C) 2000-2017 Kern Sibbald
# License: BSD 2-Clause; see file LICENSE-FOSS
#
# Set this to the make option (usually -j3 or higher)
MAKEOPT="-j3"
USE_VTAPE=yes
#USE_SHSTORE=yes
#FORCE_ALIGNED=yes
#FORCE_DEDUP=yes
#FORCE_SDCALLS=yes

#BAT="--enable-bat"
BAT=

# Where to get the source to be tested
BACULA_SOURCE=`pwd`/../bacula

# Where to send email   !!!!! Change me !!!!!!!
EMAIL=my-name@domain.com
# if you don't have any SMTP, set "dummy" or empty to use dummy_bsmtp
SMTP_HOST="localhost"

# You may put your real host name here, but localhost is valid also
#  and it has the advantage that it works on a non-newtworked machine
HOST="127.0.0.1"

# Full "default" path where to find sqlite (no quotes!)
# if the right packages (sqlite3 & libsqlite3-dev for ubuntu) are installed
# just use WHICHDB="--with-sqlite3" below
SQLITE3_DIR=${HOME}/bacula/depkgs/sqlite3

# Set your database here
#WHICHDB="--with-sqlite3=${SQLITE3_DIR}"
#WHICHDB="--with-postgresql"
WHICHDB="--with-mysql" 

# set to /dev/null if you do not have a tape drive
# Note this is used for both the tape tests and the
#   autochanger
TAPE_DRIVE="/dev/nst0"
# set to scsi control for shared storage 
TAPE_CONTROL="/dev/null"

# if you don't have an autochanger set AUTOCHANGER to /dev/null
AUTOCHANGER="/dev/sg0"

# drive index of first autochanger drive
DRIVE1=0

# drive index of second autochanger drive or "none" (in lowercase)
DRIVE2="none"

# what slot to use for first tape
SLOT1=1

# what slot to use for the second tape
SLOT2=2

# For two drive tests -- set to /dev/null if you do not have it 
TAPE_DRIVE1="/dev/null"
# Set to second drive scsi control
TAPE_CONTROL1="/dev/null"

# Change this to use disk-changer with vtape
AUTOCHANGER_SCRIPT=mtx-changer

# This must be the path to the autochanger including its name
AUTOCHANGER_PATH="/usr/sbin/mtx"

# DB parameters
db_name="regress"
db_user="regress"
db_password=""

# Set this to "--with-tcp-wrappers" or "--without-tcp-wrappers"
TCPWRAPPERS="--with-tcp-wrappers"

# Set this to "" to disable OpenSSL support, "--with-openssl=yes"
# to enable it, or provide the path to the OpenSSL installation,
# eg "--with-openssl=/usr/local"
#   
# Note, you can also add any other (as many as you want) special   
#  Bacula configuration options here, such as --disable-batch-insert
#
OPENSSL="--with-openssl $BAT"

# Point RSYNC variable where your librsync 0.9.7b is installed
# you can compile librsync with 
# ./configure --with-pic --prefix=$HOME/dev/depkgs-rsync
# make 
# make install
#
# Then use the following RSYNC variable in your regress config file
#RSYNC=--with-rsync=$HOME/dev/depkgs-rsync
RSYNC=

# Point TOKYOCABINET variable where your tokyocabinet is installed
# you can compile tokyocabinet with 
# ./configure --with-pic --prefix=$HOME/dev/depkgs-tokyocabinet
# make 
# make install
#
# Then use the following TOKYOCABINET variable in your regress config file
# don't forget to update LD_LIBRARY_PATH or /etc/ld.so.conf,
#TOKYOCABINET=--with-tokyocabinet=$HOME/dev/depkgs-tokyocabinet
TOKYOCABINET=

# DEDUP allows to disable deduplication on the SD
# If you don't have TokyoCabinet
#DEDUP=--disable-sd-dedup
DEDUP=

# Use DEDUP device
#FORCE_DEDUP=yes|no

# Configure FileSet { Include { Options { Dedup = }}}
#DEDUP_FS_OPTION=bothsides|storage|none

# Use a client side cache
#DEDUP_FD_CACHE=yes|no

# see --with-base-port at
# http://www.bacula.org/rel-manual/Installing_Bacula.html
# You only need to change this if you want to run more than one instance
# of regression testing on the same box. You'll need to set BASEPORT
# to values that do not overlap.  BASEPORT is the first of three ports
# required by each instance, one for each of Dir, SD, and the FD.
#
BASEPORT=8101

#
# If you want to post items to the Bacula Dart dashboard, you need to
#  create a unique name here for each of your test machines.
# We recommend that you prefix it by your name, and if you have multiple
#  test machines, add some indication of the machine.
#
SITE_NAME=bacula-${HOST}

# If you want to use the full source tree to run test uncomment this
# KEEP_SOURCE=yes

#
# The following are used only if you want to run Win32 tests, which
#   is a real pain since the Win32 machine is not localhost and you
#   also need to specify what to backup.
# There are a few Win32 tests e.g. tests/win32-test where this will
#   work. You must specify the client name, its address, and a 
#   file (which may be a directory) on the machine to backup.
#   It will be backed up and restored to c:/tmp, but no checking
#   of the resulting restore data is done.
#
# Client name. Note, it must be configured to accept your regress director
WIN32_CLIENT="yyyy"
# Client FQDN or IP address
WIN32_ADDR="yyyy"
# File or Directory to backup.  This is put in the "File" directive 
#   in the FileSet
WIN32_FILE="c:/users/xxxx"
# Port of Win32 client
WIN32_PORT=9102
# Win32 Client password
WIN32_PASSWORD="zzzzz"
# Where the win32 client will have to contact the SD
WIN32_STORE_ADDR="zzzz"
# To setup autologon and regress-win32.pl start
# User name
WIN32_USER=Administrator
# Admin password
WIN32_PASS=PasswordWin

#
# Testing remote SD
#
# IP address of remote SD
REMOTE_HOST_ADDR=

# Name of this Director which will be validated remotely
#   If we are the Director, you must put xxxx below.  
#   Only on the remote director do you put the name
#     of this director in the HOST environment variable
REMOTE_DIR_NAME="xxxxx"

#
# Testing remote FD
#

# Client name. Note, it must be configured to accept your regress director
REMOTE_CLIENT="yyyy"
# Client FQDN or IP address
REMOTE_ADDR="yyyy"
# File or Directory to backup.  This is put in the "File" directive 
#   in the FileSet
REMOTE_FILE="/tmp"
# Port of Win32 client
REMOTE_PORT=8102
# Win32 Client password
REMOTE_PASSWORD="zzzzz"
# Where the win32 client will have to contact the SD
REMOTE_STORE_ADDR="zzzz"

# Docker Plugin docker_host parameter
# you can use: unix:///var/run/docker.sock
# to simulate remote operation with local socket
#PLUGDOCKERHOST="tcp://10.0.0.1:2376"

#
# This is a config variable for GPFS regression tests
# It should point to the mounted GPFS
#
#GPFSDIR=/gpfs
