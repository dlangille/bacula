<%@ MasterClass="Application.Web.Layouts.Main" Theme="Baculum-v2"%>
<com:TContent ID="Main">
	<!-- Header -->
	<header class="w3-container">
		<h5>
			<b><i class="fa fa-tasks"></i> <%[ Job history list ]%></b>
		</h5>
	</header>
	<div class="w3-margin-left">
		<button type="button" class="w3-button w3-margin-bottom w3-green<%=empty($_SESSION['dir']) ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewResource', array('component_type' => 'dir', 'component_name' => $_SESSION['dir'], 'resource_type' => 'Job'))%>';"><i class="fa fa-plus"></i> &nbsp;<%[ Add job ]%></button>
		<button type="button" class="w3-button w3-margin-bottom w3-green<%=empty($_SESSION['dir']) ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewJobWizard')%>';"><i class="fa fa-magic"></i> &nbsp;<%[ New job wizard ]%></button>
		<com:TActiveLinkButton
			CssClass="w3-button w3-margin-bottom w3-green"
			OnClick="loadRunJobModal"
			Attributes.onclick="document.getElementById('run_job').style.display='block'"
		>
			<i class="fa fa-cogs"></i> &nbsp;<%[ Run job ]%>
		</com:TActiveLinkButton>
	</div>
	<div class="w3-container">
		<table id="job_list" class="w3-table w3-striped w3-hoverable w3-white w3-margin-bottom selectable" style="width: 100%">
			<thead>
				<tr>
					<th></th>
					<th><%[ JobId ]%></th>
					<th><%[ Name ]%></th>
					<th><%[ Type ]%></th>
					<th class="w3-center"><%[ Level ]%></th>
					<th class="w3-center">ClientId</th>
					<th class="w3-center"><%[ Client ]%></th>
					<th class="w3-center"><%[ Scheduled time ]%></th>
					<th class="w3-center"><%[ Start time ]%></th>
					<th class="w3-center"><%[ End time ]%></th>
					<th class="w3-center"><%[ Real end time ]%></th>
					<th class="w3-center">JobTDate</th>
					<th class="w3-center">VolSessionId</th>
					<th class="w3-center">VolSessionTime</th>
					<th class="w3-center"><%[ Job status ]%></th>
					<th class="w3-center"><%[ Size ]%></th>
					<th class="w3-center"><%[ Read bytes ]%></th>
					<th class="w3-center"><%[ Files ]%></th>
					<th class="w3-center"><%[ Job errors ]%></th>
					<th class="w3-center"><%[ Job missing files ]%></th>
					<th class="w3-center">PoolId</th>
					<th class="w3-center"><%[ Pool ]%></th>
					<th class="w3-center">FileSetId</th>
					<th class="w3-center"><%[ FileSet ]%></th>
					<th class="w3-center">PriorJobId</th>
					<th class="w3-center"><%[ Purged files ]%></th>
					<th class="w3-center"><%[ Has base ]%></th>
					<th class="w3-center"><%[ Reviewed ]%></th>
					<th class="w3-center"><%[ Comment ]%></th>
					<th class="w3-center"><%[ File table ]%></th>
					<th class="w3-center"><%[ Action ]%></th>
				</tr>
			</thead>
			<tbody id="job_list_body"></tbody>
			<tfoot>
				<tr>
					<th></th>
					<th><%[ JobId ]%></th>
					<th><%[ Name ]%></th>
					<th><%[ Type ]%></th>
					<th class="w3-center"><%[ Level ]%></th>
					<th class="w3-center">ClientId</th>
					<th class="w3-center"><%[ Client ]%></th>
					<th class="w3-center"><%[ Scheduled time ]%></th>
					<th class="w3-center"><%[ Start time ]%></th>
					<th class="w3-center"><%[ End time ]%></th>
					<th class="w3-center"><%[ Real end time ]%></th>
					<th class="w3-center">JobTDate</th>
					<th class="w3-center">VolSessionId</th>
					<th class="w3-center">VolSessionTime</th>
					<th class="w3-center"><%[ Job status ]%></th>
					<th class="w3-center"><%[ Size ]%></th>
					<th class="w3-center"><%[ Read bytes ]%></th>
					<th class="w3-center"><%[ Files ]%></th>
					<th class="w3-center"><%[ Job errors ]%></th>
					<th class="w3-center"><%[ Job missing files ]%></th>
					<th class="w3-center">PoolId</th>
					<th class="w3-center"><%[ Pool ]%></th>
					<th class="w3-center">FileSetId</th>
					<th class="w3-center"><%[ FileSet ]%></th>
					<th class="w3-center">PriorJobId</th>
					<th class="w3-center"><%[ Purged files ]%></th>
					<th class="w3-center"><%[ Has base ]%></th>
					<th class="w3-center"><%[ Reviewed ]%></th>
					<th class="w3-center"><%[ Comment ]%></th>
					<th class="w3-center"><%[ File table ]%></th>
					<th class="w3-center"><%[ Action ]%></th>
				</tr>
			</tfoot>
		</table>
		<p class="info w3-hide-medium w3-hide-small"><%[ Tip: Use left-click to select table row. Use CTRL + left-click to multiple row selection. Use SHIFT + left-click to add a range of rows to selection. ]%></p>
	</div>
	<com:Application.Web.Portlets.RunJob ID="RunJobModal" />
	<com:TCallback ID="RunJobCb" OnCallback="runJobAgain">
		<prop:ClientSide.OnLoading>
			show_btn_loader(sender.options.CallbackParameter);
		</prop:ClientSide.OnLoading>
		<prop:ClientSide.OnComplete>
			hide_btn_loader(sender.options.CallbackParameter);
			oMonitor();
		</prop:ClientSide.OnComplete>
	</com:TCallback>
	<com:TCallback ID="CancelJobCb" OnCallback="cancelJob">
		<prop:ClientSide.OnLoading>
			show_btn_loader(sender.options.CallbackParameter);
		</prop:ClientSide.OnLoading>
		<prop:ClientSide.OnComplete>
			hide_btn_loader(sender.options.CallbackParameter);
			oMonitor();
		</prop:ClientSide.OnComplete>
	</com:TCallback>
<script type="text/javascript">
function get_run_job_callback() {
	return <%=$this->RunJobCb->ActiveControl->Javascript%>;
}
function get_cancel_job_callback() {
	return <%=$this->CancelJobCb->ActiveControl->Javascript%>;
}
function show_btn_loader(jobid) {
	var btns = document.querySelectorAll('button[data-btn-id="' + jobid + '"]');
	var loader;
	for (var i = 0; i < btns.length; i++) {
		loader = document.createElement('IMG');
		loader.setAttribute('data-loader-id', jobid);
		loader.src = '<%=$this->getPage()->getTheme()->getBaseUrl()%>/loader-small.gif';
		loader.style.display = 'none';
		loader.className = 'btn_loader';
		btns[i].parentNode.insertBefore(loader, btns[i]);
		btns[i].style.display = 'none';
		loader.style.display = '';
	}
}

function hide_btn_loader(jobid) {
	var btns = document.querySelectorAll('button[data-btn-id="' + jobid + '"]');
	var loaders = document.querySelectorAll('img[data-loader-id="' + jobid + '"]');
	var loader_list = Array.prototype.slice.call(loaders);

	// Note, there can be more loaders with the same loader-id in small width view.
	for (var i = (loader_list.length-1); i >= 0; i--) {
		loader_list[i].parentNode.removeChild(loader_list[i]);
	}

	for (var i = 0; i < btns.length; i++) {
		btns[i].style.display = 'inline-block';
	}
}

var oJobList = {
	table: null,
	table_toolbar: null,
	actions: [
		{
			action: 'cancel',
			label: '<%[ Cancel ]%>',
			value: 'jobid',
			callback: <%=$this->CancelJobsAction->ActiveControl->Javascript%>,
			before: function() {
				oBulkActionsModal.show_output(true);
			}
		},
		{
			action: 'delete',
			label: '<%[ Delete ]%>',
			value: 'jobid',
			callback: <%=$this->DeleteJobsAction->ActiveControl->Javascript%>,
			before: function() {
				oBulkActionsModal.show_output(true);
			},
			validate: function(selected) {
				var running_jobs = [];
				selected.each(function(v, k) {
					if (JobStatus.is_running(v.jobstatus)) {
						running_jobs.push(' - [' + v.jobid + '] ' + v.name);
					}
				});
				if (running_jobs.length > 0) {
					var emsg = '<%[ Following jobs are running and cannot be deleted: %running_jobs To delete them, please stop these jobs and try again. ]%>';
					emsg = emsg.replace('%running_jobs', '<hr />' + running_jobs.join('<br />') + '<hr />');
					oBulkActionsModal.set_error(emsg);
					return false;
				}
				return true;
			}
		}
	],
	ids: {
		job_list: 'job_list',
		job_list_body: 'job_list_body'
	},
	data: [],
	table: null,
	init: function() {
		this.data = oData.jobs;
		if (this.table) {
			update_job_table(this.table, this.data);
		} else {
			this.set_table();
			this.set_bulk_actions();
			this.set_events();
		}
	},
	set_events: function() {
		document.getElementById(this.ids.job_list).addEventListener('click', function(e) {
			$(function() {
				this.table_toolbar.style.display = this.table.rows({selected: true}).data().length > 0 ? '' : 'none';
			}.bind(this));
		}.bind(this));
		var el = $('#' + this.ids.job_list);
		el.on('page.dt', function () {
			el.find('img.btn_loader').each(function(idx, el) {
				var jobid = el.getAttribute('data-loader-id');
				hide_btn_loader(jobid);
			});
		});
	},
	set_table: function() {
		this.table = $('#' + this.ids.job_list).DataTable({
			data: this.data,
			deferRender: true,
			dom: 'lB<"table_toolbar">frtip',
			stateSave: true,
			buttons: [
				'copy', 'csv', 'colvis'
			],
			columns: [
				{
					className: 'details-control',
					orderable: false,
					data: null,
					defaultContent: '<button type="button" class="w3-button w3-blue"><i class="fa fa-angle-down"></i></button>'
				},
				{data: 'jobid'},
				{data: 'name'},
				{
					data: 'type',
					render: function(data, type, row) {
						return JobType.get_type(data);
					}
				},
				{
					data: 'level',
					render: function(data, type, row) {
						return (['R', 'D'].indexOf(row.type) === -1 ? JobLevel.get_level(data) : '-');
					}
				},
				{
					data: 'clientid',
					visible: false
				},
				{
					data: 'client',
					visible: false
				},
				{
					data: 'schedtime',
					visible: false
				},
				{data: 'starttime'},
				{data: 'endtime'},
				{
					data: 'realendtime',
					visible: false
				},
				{
					data: 'jobtdate',
					render: function (data, type, row) {
						var t;
						if (type == 'display') {
							t = Units.format_date(data)
						} else {
							t = data;
						}
						return t;
					},
					visible: false
				},
				{
					data: 'volsessionid',
					visible: false
				},
				{
					data: 'volsessiontime',
					render: function (data, type, row) {
						var t;
						if (type == 'display') {
							t = Units.format_date(data)
						} else {
							t = data;
						}
						return t;
					},
					visible: false
				},
				{
					data: 'jobstatus',
					render: function (data, type, row) {
						var ret;
						if (type == 'display') {
							ret = JobStatus.get_icon(data).outerHTML;
						} else {
							ret = data;
						}
						return ret;
					},
					className: 'w3-center'
				},
				{
					data: 'jobbytes',
					render: function (data, type, row) {
						var s;
						if (type == 'display') {
							s = Units.get_formatted_size(data)
						} else {
							s = data;
						}
						return s;
					}
				},
				{
					data: 'readbytes',
					render: function (data, type, row) {
						var s;
						if (type == 'display') {
							s = Units.get_formatted_size(data)
						} else {
							s = data;
						}
						return s;
					},
					visible: false
				},
				{data: 'jobfiles'},
				{
					data: 'joberrors',
					visible: false
				},
				{
					data: 'jobmissingfiles',
					visible: false
				},
				{
					data: 'poolid',
					visible: false
				},
				{
					data: 'pool',
					visible: false
				},
				{
					data: 'filesetid',
					visible: false
				},
				{
					data: 'fileset',
					visible: false
				},
				{
					data: 'priorjobid',
					visible: false
				},
				{
					data: 'purgedfiles',
					visible: false
				},
				{
					data: 'hasbase',
					visible: false
				},
				{
					data: 'reviewed',
					visible: false
				},
				{
					data: 'comment',
					visible: false
				},
				{
					data: 'filetable',
					visible: false
				},
				{
					data: 'jobid',
					render: function (data, type, row) {
						var container = document.createElement('DIV');
						var btn, i;
						if (['C', 'R'].indexOf(row.jobstatus) === -1) {
							// rerun job button
							btn = document.createElement('BUTTON');
							btn.className = 'w3-button w3-tiny w3-green';
							btn.type = 'button';
							i = document.createElement('I');
							btn.title = '<%[ Run job again ]%>';
							i.className = 'fa fa-play';
							btn.appendChild(i);
							btn.setAttribute('data-btn-id', data);
							btn.setAttribute('onclick', 'var rjc = get_run_job_callback(); rjc.setCallbackParameter(' + data + '); rjc.dispatch();');
						} else {
							// cancel job button
							btn = document.createElement('BUTTON');
							btn.className = 'w3-button w3-tiny w3-green';
							btn.type = 'button';
							i = document.createElement('I');
							btn.title = '<%[ Cancel job ]%>';
							i.className = 'fa fa-stop';
							btn.appendChild(i);
							btn.setAttribute('data-btn-id', data);
							btn.setAttribute('onclick', 'var cjc = get_cancel_job_callback(); cjc.setCallbackParameter(' + data + '); cjc.dispatch();');
						}
						container.appendChild(btn);
						var space = document.createTextNode(' ');
						container.appendChild(space);

						// job details button
						btn = document.createElement('BUTTON');
						btn.className = 'w3-button w3-tiny w3-green';
						btn.type = 'button';
						i = document.createElement('I');
						i.className = 'fa fa-list-ul';
						btn.title = '<%[ Details ]%>';
						btn.appendChild(i);
						btn.innerHTML += '&nbsp';
						btn.setAttribute('onclick', "document.location.href = '/web/job/history/" + data + "/'");
						container.appendChild(btn);
						return container.outerHTML;
					}
				}
			],
			responsive: {
				details: {
					type: 'column'
				}
			},
			columnDefs: [{
				className: 'control',
				orderable: false,
				targets: 0
			},
			{
				className: 'action_col',
				orderable: false,
				targets: [ 30 ]
			},
			{
				className: "dt-center",
				targets: [ 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ]
			},
			{
				className: "dt-body-right",
				targets: [ 15, 16 ]
			}],
			select: {
				style:    'os',
				selector: 'td:not(:last-child):not(:first-child)',
				blurable: false
			},
			order: [1, 'desc'],
			initComplete: function () {
				this.api().columns([2, 3, 4, 5, 14]).every(function () {
					var column = this;
					var select = $('<select><option value=""></option></select>')
					.appendTo($(column.footer()).empty())
					.on('change', function () {
						var val = dtEscapeRegex(
							$(this).val()
						);
						column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
					});
					if (column[0][0] == 14) {
						column.data().unique().sort().each(function (d, j) {
							if (column.search() == '^' + dtEscapeRegex(d) + '$') {
								select.append('<option value="' + d + '" title="' + JobStatus.get_desc(d) + '" selected>' + d + '</option>');
							} else {
								select.append('<option value="' + d + '" title="' + JobStatus.get_desc(d) + '">' + d + '</option>');
							}
						});
					} else {
						column.cells('', column[0]).render('display').unique().sort().each(function(d, j) {
							if (column.search() == '^' + dtEscapeRegex(d) + '$') {
								select.append('<option value="' + d + '" selected>' + d + '</option>');
							} else {
								select.append('<option value="' + d + '">' + d + '</option>');
							}
						});
					}
				});
			}
		});
	},
	set_bulk_actions: function() {
		this.table_toolbar = get_table_toolbar(this.table, this.actions, {
			actions: '<%[ Actions ]%>',
			ok: '<%[ OK ]%>'
		});
	}
};
MonitorParams = {jobs: null};
$(function() {
	MonitorCallsInterval.push(function() { oJobList.init(); });
});

/**
 * Defne bulk actions output id here because expression tags (< % = % >) cannot
 * be defined in the TCallback ClientSide properties.
 */
var bulk_actions_output_id = '<%=$this->SourceTemplateControl->BulkActions->BulkActionsOutput->ClientID%>';
</script>
<com:TCallback ID="CancelJobsAction" OnCallback="cancelJobs">
	<prop:ClientSide.OnLoading>
		oBulkActionsModal.clear_output(bulk_actions_output_id);
		oBulkActionsModal.show_loader(true);
	</prop:ClientSide.OnLoading>
	<prop:ClientSide.OnComplete>
		oBulkActionsModal.show_loader(false);
		// job status in the Catalog changes a little moment after finishing cancel command
		setTimeout('oMonitor()', 5000);
	</prop:ClientSide.OnComplete>
</com:TCallback>
<com:TCallback ID="DeleteJobsAction" OnCallback="deleteJobs">
	<prop:ClientSide.OnLoading>
		oBulkActionsModal.clear_output(bulk_actions_output_id);
		oBulkActionsModal.show_loader(true);
	</prop:ClientSide.OnLoading>
	<prop:ClientSide.OnComplete>
		oBulkActionsModal.show_loader(false);
		oJobList.table_toolbar.style.display = 'none';
		oMonitor();
	</prop:ClientSide.OnComplete>
</com:TCallback>
<com:Application.Web.Portlets.BulkActionsModal ID="BulkActions" />
</com:TContent>
