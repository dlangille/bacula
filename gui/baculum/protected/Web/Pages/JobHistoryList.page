<%@ MasterClass="Application.Web.Layouts.Main" Theme="Baculum-v2"%>
<com:TContent ID="Main">
	<!-- Header -->
	<header class="w3-container">
		<h5>
			<b><i class="fa fa-tasks"></i> <%[ Job history list ]%></b>
		</h5>
	</header>
	<div class="w3-margin-left w3-margin-bottom">
		<button type="button" class="w3-button w3-green<%=empty($_SESSION['dir']) ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewResource', array('component_type' => 'dir', 'component_name' => $_SESSION['dir'], 'resource_type' => 'Job'))%>';"><i class="fa fa-plus"></i> &nbsp;<%[ Add job ]%></button>
		<button type="button" class="w3-button w3-green<%=empty($_SESSION['dir']) ? ' hide': ''%>" onclick="document.location.href='<%=$this->Service->constructUrl('NewJobWizard')%>';"><i class="fa fa-magic"></i> &nbsp;<%[ New job wizard ]%></button>
		<com:TActiveLinkButton
			CssClass="w3-button w3-green"
			OnClick="loadRunJobModal"
			Attributes.onclick="document.getElementById('run_job').style.display='block'"
		>
			<i class="fa fa-cogs"></i> &nbsp;<%[ Run job ]%>
		</com:TActiveLinkButton>
	</div>
	<div class="w3-container">
		<table id="job_list" class="w3-table w3-striped w3-hoverable w3-white w3-margin-bottom" style="width: 100%">
			<thead>
				<tr>
					<th></th>
					<th><%[ JobId ]%></th>
					<th><%[ Name ]%></th>
					<th><%[ Type ]%></th>
					<th class="w3-center"><%[ Level ]%></th>
					<th class="w3-center"><%[ Start time ]%></th>
					<th class="w3-center"><%[ End time ]%></th>
					<th class="w3-center"><%[ Job status ]%></th>
					<th class="w3-center"><%[ Size ]%></th>
					<th class="w3-center"><%[ Files ]%></th>
					<th class="w3-center"><%[ Action ]%></th>
				</tr>
			</thead>
			<tbody id="job_list_body"></tbody>
			<tfoot>
				<tr>
					<th></th>
					<th><%[ JobId ]%></th>
					<th><%[ Name ]%></th>
					<th><%[ Type ]%></th>
					<th class="w3-center"><%[ Level ]%></th>
					<th class="w3-center"><%[ Start time ]%></th>
					<th class="w3-center"><%[ End time ]%></th>
					<th class="w3-center"><%[ Job status ]%></th>
					<th class="w3-center"><%[ Size ]%></th>
					<th class="w3-center"><%[ Files ]%></th>
					<th class="w3-center"><%[ Action ]%></th>
				</tr>
			</tfoot>
		</table>
	</div>
	<com:Application.Web.Portlets.RunJob ID="RunJobModal" />
	<com:TCallback ID="RunJobCb" OnCallback="runJobAgain" />
	<com:TCallback ID="CancelJobCb" OnCallback="cancelJob" />
<script type="text/javascript">
var run_job_callback = <%=$this->RunJobCb->ActiveControl->Javascript%>;
var cancel_job_callback = <%=$this->CancelJobCb->ActiveControl->Javascript%>;
function refresh_job_history(jobid) {
	document.location.href = '<%=$this->Service->constructUrl('JobHistoryList')%>';
}
var oJobList = {
	ids: {
		job_list: 'job_list',
		job_list_body: 'job_list_body'
	},
	init: function() {
		this.set_table();
	},
	set_table: function() {
		var table = $('#' + this.ids.job_list).DataTable({
			data: oData.jobs,
			deferRender: true,
			columns: [
				{
					className: 'details-control',
					orderable: false,
					data: null,
					defaultContent: '<button type="button" class="w3-button w3-blue"><i class="fa fa-angle-down"></i></button>'
				},
				{data: 'jobid'},
				{data: 'name'},
				{
					data: 'type',
					render: function(data, type, row) {
						return JobType.get_type(data);
					}
				},
				{
					data: 'level',
					render: function(data, type, row) {
						return (['R', 'D'].indexOf(row.type) === -1 ? JobLevel.get_level(data) : '-');
					}
				},
				{data: 'starttime'},
				{data: 'endtime'},
				{
					data: 'jobstatus',
					render: function (data, type, row) {
						var ret;
						if (type == 'display') {
							ret = JobStatus.get_icon(data).outerHTML;
						} else {
							ret = data;
						}
						return ret;
					},
					className: 'w3-center'
				},
				{
					data: 'jobbytes',
					render: function (data, type, row) {
						var s;
						if (type == 'display') {
							s = Units.get_formatted_size(data)
						} else {
							s = data;
						}
						return s;
					}
				},
				{data: 'jobfiles'},
				{
					data: 'jobid',
					render: function (data, type, row) {
						var container = document.createElement('DIV');
						var btn, i;
						if (['C', 'R'].indexOf(row.jobstatus) === -1) {
							// rerun job button
							btn = document.createElement('BUTTON');
							btn.className = 'w3-button w3-green';
							btn.type = 'button';
							i = document.createElement('I');
							btn.title = '<%[ Run job again ]%>';
							i.className = 'fa fa-play';
							btn.appendChild(i);
							btn.setAttribute('onclick', 'run_job_callback.setCallbackParameter(' + data + '); run_job_callback.dispatch();');
						} else {
							// cancel job button
							btn = document.createElement('BUTTON');
							btn.className = 'w3-button w3-green';
							btn.type = 'button';
							i = document.createElement('I');
							btn.title = '<%[ Cancel job ]%>';
							i.className = 'fa fa-stop';
							btn.appendChild(i);
							btn.setAttribute('onclick', 'cancel_job_callback.setCallbackParameter(' + data + '); cancel_job_callback.dispatch();');
						}
						container.appendChild(btn);
						var space = document.createTextNode(' ');
						container.appendChild(space);

						// job details button
						btn = document.createElement('BUTTON');
						btn.className = 'w3-button w3-green';
						btn.type = 'button';
						i = document.createElement('I');
						i.className = 'fa fa-list-ul';
						btn.title = '<%[ Details ]%>';
						btn.appendChild(i);
						btn.innerHTML += '&nbsp';
						btn.setAttribute('onclick', "document.location.href = '/web/job/history/" + data + "/'");
						container.appendChild(btn);
						return container.outerHTML;
					}
				}
			],
			responsive: {
				details: {
					type: 'column'
				}
			},
			columnDefs: [{
				className: 'control',
				orderable: false,
				targets: 0
			},
			{
				className: 'action_col',
				orderable: false,
				targets: [ 10 ]
			},
			{
				className: "dt-center",
				targets: [ 1, 3, 4, 5, 6, 7, 9, 10 ]
			},
			{
				className: "dt-body-right",
				targets: [ 8 ]
			}],
			order: [1, 'desc'],
			initComplete: function () {
				this.api().columns([2, 3, 4, 7]).every(function () {
					var column = this;
					var select = $('<select><option value=""></option></select>')
					.appendTo($(column.footer()).empty())
					.on('change', function () {
						var val = $.fn.dataTable.util.escapeRegex(
							$(this).val()
						);
						column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
					});
					if (column[0][0] == 7) {
						column.data().unique().sort().each(function (d, j) {
							select.append('<option value="' + d + '" title="' + JobStatus.get_desc(d) + '">' + d + '</option>');
						});
					} else {
						column.cells('', column[0]).render('display').unique().sort().each(function(d, j) {
							select.append('<option value="' + d + '">' + d + '</option>');
						});
					}
				});
			}
		});
	}
};
MonitorParams = ['jobs'];
$(function() {
	MonitorCalls.push(function() { oJobList.init(); });
});
</script>
</com:TContent>
