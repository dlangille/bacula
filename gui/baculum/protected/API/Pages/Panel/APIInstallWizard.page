<%@ MasterClass="Application.API.Layouts.Wizard" Theme="Baculum-v1"%>
<com:TContent ID="Wizard">
	<com:BClientScript ScriptUrl=<%~ ../../JavaScript/misc.js %> />
	<com:TWizard ID="InstallWizard"
		CssClass="wizard"
		StepStyle.CssClass="steps"
		HeaderStyle.CssClass="header"
		NavigationStyle.CssClass="navigation"
		UseDefaultLayout="false"
		ShowSideBar="false"
		OnCancelButtonClick="wizardStop"
		OnCompleteButtonClick="wizardCompleted"
		>
		<prop:HeaderTemplate>
			<div>
				<div class="step step-<%=($this->Parent->ActiveStepIndex === 0) ? 'first-active' : (($this->Parent->ActiveStepIndex === 1) ? 'first-next-active' : 'first')%>">
					<div><com:TTranslate Text="Language" /></div>
				</div>
				<div class="step step-<%=($this->Parent->ActiveStepIndex === 1) ? 'active' : (($this->Parent->ActiveStepIndex === 2) ? 'prev-active' : 'normal')%>">
					<div><com:TTranslate Text="Catalog API" /></div>
				</div>
				 <div class="step step-<%=($this->Parent->ActiveStepIndex === 2) ? 'active' : (($this->Parent->ActiveStepIndex === 3) ? 'prev-active' : 'normal')%>">
					<div><com:TTranslate Text="Console API" /></div>
				</div>
				<div class="step step-<%=($this->Parent->ActiveStepIndex === 3) ? 'active' : (($this->Parent->ActiveStepIndex === 4) ? 'prev-active' : 'normal')%>">
					<div><com:TTranslate Text="Config API" /></div>
				</div>
				<div class="step step-<%=($this->Parent->ActiveStepIndex === 4) ? 'active' : (($this->Parent->ActiveStepIndex === 5) ? 'prev-active' : 'normal')%>">
					<div><com:TTranslate Text="Actions" /></div>
				</div>
				<div class="step step-<%=($this->Parent->ActiveStepIndex === 5) ? 'active' : (($this->Parent->ActiveStepIndex === 6) ? 'prev-active' : 'normal')%>">
					<div><com:TTranslate Text="Authentication" /></div>
				</div>
				<div class="step step-<%=($this->Parent->ActiveStepIndex === 6) ? 'last-active' : (($this->Parent->ActiveStepIndex === 7) ? 'last-prev-active' : 'last')%>">
					<div><com:TTranslate Text="Finish" /></div>
				</div>
				<div id="title"><%=$this->Parent->ActiveStep->Title%><div>
			</div>
		</prop:HeaderTemplate>
		<prop:StartNavigationTemplate>
				<com:TPanel CssClass="button-cancel" Visible="<%=$this->getPage()->first_run === false%>"><com:BButton CommandName="Cancel" Text="<%[ Cancel ]%>" /></com:TPanel>
				<div <%=$this->getPage()->first_run === false ? 'class="button-prev-next"' : ''%>><com:BButton CommandName="NextStep" Text="<%[ Next &raquo; ]%>" /></div>
		</prop:StartNavigationTemplate>

		<prop:StepNavigationTemplate>
			<com:TPanel CssClass="button-cancel" Visible="<%=$this->getPage()->first_run === false%>"><com:BButton CommandName="Cancel" Text="<%[ Cancel ]%>" /></com:TPanel>
			<div <%=$this->getPage()->first_run === false ? 'class="button-prev-next"' : ''%>>
				<com:BButton CausesValidation="False" CssClass="bbutton" CommandName="PreviousStep" Text="<%[ &laquo; Previous ]%>" />
				<com:BButton ID="NextButton" CommandName="NextStep" Attributes.onclick="return (typeof(wizard_validation) == 'function') ? wizard_validation() : true;" Text="<%[ Next &raquo; ]%>" />
			</div>
		</prop:StepNavigationTemplate>
		<prop:FinishNavigationTemplate>
			<com:TPanel CssClass="button-cancel" Visible="<%=$this->getPage()->first_run === false%>"><com:BButton CommandName="Cancel" Text="<%[ Cancel ]%>" /></com:TPanel>
			<div <%=$this->getPage()->first_run === false ? 'class="button-prev-next"' : ''%>>
				<com:BButton CausesValidation="False" CssClass="bbutton" CommandName="PreviousStep" Text="<%[ &laquo; Previous ]%>" />
				<com:BButton CommandName="Complete" Text="<%[ Save ]%>" />
			</div>
		</prop:FinishNavigationTemplate>
		<com:TWizardStep ID="Step1" Title="<%[ Step 1 - select language ]%>" StepType="Auto">
			<div class="line">
				<div class="text"><com:TLabel ForControl="Lang" Text="<%[ Language: ]%>" /></div>
				<div class="field">
					<com:TActiveDropDownList ID="Lang" CssClass="textbox" Width="150px" OnTextChanged="setLang" CausesValidation="false" ClientSide.OnComplete="location.reload();">
						<com:TListItem Value="en" Text="English" />
						<com:TListItem Value="pl" Text="Polish" />
						<com:TListItem Value="pt" Text="Portuguese" />
						<com:TListItem Value="ru" Text="Russian" />
					</com:TActiveDropDownList>
					<com:TCompareValidator CssClass="validator-block" Display="Dynamic" ControlToValidate="Lang" DataType="String" ValueToCompare="none" Operator="NotEqual" Text="<%[ Please select language. ]%>" />
				</div>
			</div>
		</com:TWizardStep>
		<com:TWizardStep ID="Step2" Title="<%[ Step 2 - share the Bacula Catalog Database ]%>" StepType="Auto">
			<p><%[ Do you want to setup and to share the Bacula Catalog Database access for this API instance? ]%></p>
			<div class="line left">
				<com:TRadioButton ID="DatabaseNo" GroupName="SelectDatabase" Attributes.onclick="$('#configure_database').hide();" /> <com:TLabel ForControl="DatabaseNo" Text="<%[ No ]%>" />
			</div>
			<div class="line left">
				<com:TRadioButton ID="DatabaseYes" GroupName="SelectDatabase" Attributes.onclick="$('#configure_database').show();" /> <com:TLabel ForControl="DatabaseYes" Text="<%[ Yes ]%>" />
			</div>
			<div id="configure_database" style="display: <%=($this->DatabaseYes->Checked === true) ? '' : 'none';%>">
				<com:TActivePanel ID="Step2Content">
					<div class="line">
						<div class="text"><com:TLabel ForControl="DBType" Text="<%[ Database type: ]%>" /></div>
						<div class="field">
							<com:TActiveDropDownList
								ID="DBType"
								CssClass="textbox"
								Width="170px"
								OnLoad="setDBType"
								OnTextChanged="setDBType"
								CausesValidation="false"
								OnCallback="renderPanel"
							>
								<com:TListItem Value="none" Text="<%[ select database ]%>" />
								<com:TListItem Value="pgsql" Text="PostgreSQL" />
								<com:TListItem Value="mysql" Text="MySQL" />
								<com:TListItem Value="sqlite" Text="SQLite" />
							</com:TActiveDropDownList>
							<com:TCompareValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlToValidate="DBType"
								DataType="String"
								ValueToCompare="none"
								Operator="NotEqual"
								ValidationGroup="DbGroup"
								Text="<%[ Please select database type. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="DBName" Text="<%[ Database name: ]%>" /></div>
						<div class="field">
							<com:TTextBox ID="DBName" CssClass="textbox" />
							<com:TRequiredFieldValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="DBName"
								ValidationGroup="DbGroup"
								Text="<%[ Please enter database name. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="Login" Text="<%[ Login: ]%>" /></div>
						<div class="field">
							<com:TActiveTextBox ID="Login" CssClass="textbox" />
							<com:TRequiredFieldValidator
								ID="LoginValidator"
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="Login"
								ValidationGroup="DbGroup"
								Text="<%[ Please enter login. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="Password" Text="<%[ Password: ]%>" /></div>
						<div class="field"><com:TActiveTextBox
							ID="Password"
							CssClass="textbox"
							TextMode="Password"
							PersistPassword="true"
						 /></div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="IP" Text="<%[ IP address (or hostname): ]%>" /></div>
						<div class="field">
							<com:TActiveTextBox ID="IP" CssClass="textbox" />
							<com:TRequiredFieldValidator
								ID="IPValidator"
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="IP"
								ValidationGroup="DbGroup"
								Text="<%[ Please enter IP address or hostname. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="Port" Text="<%[ Port: ]%>" /></div>
						<div class="field">
							<com:TActiveTextBox ID="Port" CssClass="textbox" Width="55px" MaxLength="5" Enabled="false" />
							<com:TRequiredFieldValidator
								ID="PortValidator"
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="Port"
								ValidationGroup="DbGroup"
								Text="<%[ Please enter database port. ]%>"
							/>
						</div>
					</div>
					<com:TActivePanel
						ID="DBPathField"
						CssClass="line"
						Display="<%=$this->getPage()->first_run === false && !$this->IsCallBack && $this->getPage()->config['db']['type'] == 'sqlite' ? 'Fixed' : $this->DBPathField->Display%>">
						<div class="text"><com:TLabel ForControl="DBPath" Text="<%[ SQLite database path: ]%>" /></div>
						<div class="field">
							<com:TActiveTextBox ID="DBPath" CssClass="textbox" Enabled="false" />
							<com:TRequiredFieldValidator
								ID="DBPathValidator"
								Display="Dynamic"
								CssClass="validator-block"
								ControlCssClass="invalidate"
								ControlToValidate="DBPath"
								ValidationGroup="DbGroup"
								Text="<%[ Please enter database path. ]%>"
							/>
						</div>
					</com:TActivePanel>
					<div class="line">
						<div class="text" style="vertical-align: top"><com:TLabel ForControl="ConnectionTest" Text="<%[ Connection test: ]%>" CssClass="test_label" /></div>
						<div class="field">
							<table border="0" cellpadding="1px">
								<tr>
									<td align="center" valign="middle">
										<com:TActiveButton ID="ConnectionTest" Text="<%[ test ]%>" CausesValidation="false" OnCallback="connectionDBTest">
											<prop:ClientSide.OnLoading>
												$('#<%=$this->DbTestResultOk->ClientID%>').hide();
												$('#<%=$this->DbTestResultErr->ClientID%>').hide();
												$('#<%=$this->DbTestLoader->ClientID%>').show();
											</prop:ClientSide.OnLoading>
											<prop:ClientSide.OnComplete>
												$('#<%=$this->DbTestLoader->ClientID%>').hide();
											</prop:ClientSide.OnComplete>
										</com:TActiveButton>
									</td>
									<td align="center" valign="middle">
										<com:TActiveLabel ID="DbTestLoader" Display="None"><img src="<%=$this->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></com:TActiveLabel>
										<com:TActiveLabel ID="DbTestResultOk" Display="None" CssClass="validate"><img src="<%=$this->getTheme()->getBaseUrl()%>/icon_ok.png" alt="Validate" /> <%[ OK ]%></com:TActiveLabel>
										<com:TActiveLabel ID="DbTestResultErr" Display="None" CssClass="validator-block left"><img src="<%=$this->getTheme()->getBaseUrl()%>/icon_err.png" alt="Invalidate" /> <%[ Connection error ]%></com:TActiveLabel>
									</td>
								</tr>
							</table>
						</div>
					</div>
					<div style="clear: left"></div>
				</com:TActivePanel>
			</div>
			<script type="text/javascript">
				var wizard_validation = function() {
					var result = true;
					var db = document.getElementById('<%=$this->DatabaseYes->ClientID%>');
					if (db.checked) {
						result = Prado.Validation.validate(Prado.Validation.getForm(), 'DbGroup');
					}
					return result;
				}
			</script>
		</com:TWizardStep>
		<com:TWizardStep ID="Step3" Title="<%[ Step 3 - share the Bacula Bconsole commands interface ]%>" StepType="Auto">
			<p><%[ Do you want to setup and share the Bacula Bconsole interface to execute commands in this API instance? ]%></p>
			<div class="line left">
				<com:TRadioButton ID="ConsoleNo" GroupName="SelectConsole" Attributes.onclick="$('#configure_console').hide();" /> <com:TLabel ForControl="ConsoleNo" Text="<%[ No ]%>" />
			</div>
			<div class="line left">
				<com:TRadioButton ID="ConsoleYes" GroupName="SelectConsole" Attributes.onclick="$('#configure_console').show();" /> <com:TLabel ForControl="ConsoleYes" Text="<%[ Yes ]%>" />
			</div>
			<div id="configure_console" style="display: <%=($this->ConsoleYes->Checked === true) ? '' : 'none';%>">
				<div class="line">
					<div class="text"><com:TLabel ForControl="BconsolePath" Text="<%[ Bconsole binary file path: ]%>" /></div>
					<div class="field">
						<com:TTextBox ID="BconsolePath" CssClass="textbox" CausesValidation="false" />
						<com:TRequiredFieldValidator CssClass="validator-block" Display="Dynamic" ControlCssClass="invalidate" ControlToValidate="BconsolePath" Text="<%[ Please enter bconsole path. ]%>" />
					</div>
				</div>
				<div class="line">
					<div class="text"><com:TLabel ForControl="BconsoleConfigPath" Text="<%[ Bconsole admin config file path: ]%>" /></div>
					<div class="field">
						<com:TTextBox ID="BconsoleConfigPath" CssClass="textbox" CausesValidation="false" />
						<com:TRequiredFieldValidator CssClass="validator-block" Display="Dynamic" ControlCssClass="invalidate" ControlToValidate="BconsoleConfigPath" Text="<%[ Please enter bconsole config file path. ]%>" />
					</div>
				</div>
				<div class="line">
					<div class="text"><com:TLabel ForControl="UseSudo" Text="<%[ Use sudo: ]%>" /></div>
					<div class="field">
						<com:TCheckBox ID="UseSudo" /> <a href="javascript:void(0)" onclick="get_sudo_config('bconsole');"><%[ Get sudo configuration ]%></a>

					</div>
				</div>
				<div class="line">
					<div class="text" style="vertical-align: top"><com:TLabel ForControl="BconsoleConnectionTest" Text="<%[ Bconsole connection test: ]%>" CssClass="test_label" /></div>
					<div class="field">
						<table border="0" cellpadding="1px">
							<tr>
								<td  align="center" valign="middle">
									<com:TActiveButton ID="BconsoleConnectionTest" Text="<%[ test ]%>" CausesValidation="false" OnCallback="connectionBconsoleTest">
										<prop:ClientSide.OnLoading>
											$('#<%=$this->BconsoleTestResultOk->ClientID%>').hide();
											$('#<%=$this->BconsoleTestResultErr->ClientID%>').hide();
											$('#<%=$this->BconsoleTestLoader->ClientID%>').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#<%=$this->BconsoleTestLoader->ClientID%>').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</td>
								<td align="center" valign="middle">
									<com:TActiveLabel ID="BconsoleTestLoader" Display="None"><img src="<%=$this->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></com:TActiveLabel>
									<com:TActiveLabel ID="BconsoleTestResultOk" Display="None" CssClass="validate" EnableViewState="false"><img src="<%=$this->getTheme()->getBaseUrl()%>/icon_ok.png" alt="Validate" /> <%[ OK ]%></com:TActiveLabel>
									<com:TActiveLabel ID="BconsoleTestResultErr" Display="None" CssClass="validator-block left" EnableViewState="false"><img src="<%=$this->getTheme()->getBaseUrl()%>/icon_err.png" alt="Invalidate" /> <%[ Connection error ]%></com:TActiveLabel>
								</td>
							</tr>
						</table>
					</div>
				</div>
				<div class="line left">
					<span><b><%[ NOTE! ]%></b><br /><em><%[ Baculum needs access to bconsole by the web server. ]%></em></span>
				</div>
			</div>
		</com:TWizardStep>
		<com:TWizardStep ID="Step4" Title="<%[ Step 4 - share the Bacula configuration interface ]%>" StepType="Auto">
			<p><%[ Do you want to setup and share the Bacula configuration interface to configure Bacula components via this API instance? ]%></p>
			<div class="line left">
				<com:TRadioButton ID="ConfigNo" GroupName="SelectConfig" Attributes.onclick="$('#configure_config').hide();" /> <com:TLabel ForControl="ConfigNo" Text="<%[ No ]%>" />
			</div>
			<div class="line left">
				<com:TRadioButton ID="ConfigYes" GroupName="SelectConfig" Attributes.onclick="$('#configure_config').show();" /> <com:TLabel ForControl="ConfigYes" Text="<%[ Yes ]%>" />
			</div>
			<div id="configure_config" style="display: <%=($this->ConfigYes->Checked === true) ? 'block' : 'none';%>">
				<div id="config_fields">
					<fieldset class="config_field">
						<legend><%[ General configuration ]%></legend>
						<div class="config_lines">
							<div class="line left" title="<%[ In this directory Baculum API saves temporarily Bacula configuration files (mainly for validation purposes) just before they are written as real Bacula configuration files. ]%>">
								<div class="text"><com:TLabel ForControl="BConfigDir" Text="<%[ Baculum working directory for Bacula config: ]%>" /></div>
								<div class="field">
									<com:TRequiredFieldValidator ValidationGroup="ConfigGroup" ControlToValidate="BConfigDir" Display="Dynamic" Text="<%[ Directory path field is required. ]%>" />
									<com:TActiveCustomValidator ID="BConfigDirWritableTest" ValidationGroup="ConfigGroup" ControlToValidate="BConfigDir" Text="<%[ Provided directory path is not writable by web server. ]%>" ControlCssClass="validation-error" Display="Dynamic" OnServerValidate="testConfigDir" CssClass="validator" />
									<com:TTextBox ID="BConfigDir" CssClass="textbox" />
								</div>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="BJSONUseSudo" Text="<%[ Use sudo: ]%>" /></div>
								<div class="field">
									<com:TCheckBox ID="BJSONUseSudo" /> <a href="javascript:void(0)" onclick="get_sudo_config('config');"><%[ Get sudo configuration ]%></a>

								</div>
							</div>
						</div>
						<span class="config_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
						<com:TActiveLabel ID="BConfigDirTestOk" Display="None" CssClass="validate config_test_result" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></com:TActiveLabel>
						<com:TActiveLabel ID="BConfigDirTestErr" Display="None" CssClass="validator left" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></com:TActiveLabel>
					</fieldset>
					<fieldset class="config_field">
						<legend>Director</legend>
						<div class="config_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="BDirJSONPath" Text="<%[ bdirjson binary file path: ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="BDirJSONPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="BDirJSONPath" CssClass="textbox" />
								</div>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="DirCfgPath" Text="<%[ Main Director config file path (usually bacula-dir.conf): ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="DirCfgPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="DirCfgPath" CssClass="textbox" />
								</div>
							</div>
						</div>
						<span class="config_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
						<com:TActiveLabel ID="BDirJSONPathTestOk" Display="None" CssClass="validate config_test_result" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></com:TActiveLabel>
						<com:TActiveLabel ID="BDirJSONPathTestErr" Display="None" CssClass="validator left" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Connection error ]%>" /> <%[ Connection error ]%></com:TActiveLabel>
					</fieldset>
					<fieldset class="config_field">
						<legend>Storage Daemon</legend>
						<div class="config_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="BSdJSONPath" Text="<%[ bsdjson binary file path: ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="BSdJSONPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="BSdJSONPath" CssClass="textbox" />
								</div>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="SdCfgPath" Text="<%[ Main Storage Daemon config file path (usually bacula-sd.conf): ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="SdCfgPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="SdCfgPath" CssClass="textbox" />
								</div>
							</div>
						</div>
						<span class="config_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
						<com:TActiveLabel ID="BSdJSONPathTestOk" Display="None" CssClass="validate config_test_result" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></com:TActiveLabel>
						<com:TActiveLabel ID="BSdJSONPathTestErr" Display="None" CssClass="validator left" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Connection error ]%>" /> <%[ Connection error ]%></com:TActiveLabel>
					</fieldset>
					<fieldset class="config_field">
						<legend>File Daemon/Client</legend>
						<div class="config_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="BFdJSONPath" Text="<%[ bfdjson binary file path: ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="BFdJSONPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="BFdJSONPath" CssClass="textbox" />
								</div>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="FdCfgPath" Text="<%[ Main File Daemon config file path (usually bacula-fd.conf): ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="FdCfgPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="FdCfgPath" CssClass="textbox" />
								</div>
							</div>
						</div>
						<span class="config_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
						<com:TActiveLabel ID="BFdJSONPathTestOk" Display="None" CssClass="validate config_test_result" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></com:TActiveLabel>
						<com:TActiveLabel ID="BFdJSONPathTestErr" Display="None" CssClass="validator left" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Connection error ]%>" /> <%[ Connection error ]%></com:TActiveLabel>
					</fieldset>
					<fieldset class="config_field">
						<legend>Bconsole</legend>
						<div class="config_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="BBconsJSONPath" Text="<%[ bbconsjson binary file path: ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="BBconsJSONPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="BBconsJSONPath" CssClass="textbox" />
								</div>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="BconsCfgPath" Text="<%[ Admin Bconsole config file path (usually bconsole.conf): ]%>" /></div>
								<div class="field">
									<com:TCustomValidator ValidationGroup="ConfigGroup" ControlToValidate="BconsCfgPath" ClientValidationFunction="bjsontools_validator" Display="Dynamic" Text="<%[ There is required to provide both binary file and config file paths. ]%>" />
									<com:TTextBox ID="BconsCfgPath" CssClass="textbox" />
								</div>
							</div>
						</div>
						<span class="config_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
						<com:TActiveLabel ID="BBconsJSONPathTestOk" Display="None" CssClass="validate config_test_result" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></com:TActiveLabel>
						<com:TActiveLabel ID="BBconsJSONPathTestErr" Display="None" CssClass="validator left" EnableViewState="false"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Connection error ]%>" /> <%[ Connection error ]%></com:TActiveLabel>
					</fieldset>
					<div class="left button">
						<com:BActiveButton ID="TestJSONToolsConfig" ValidationGroup="ConfigGroup" Text="<%[ Test configuration ]%>" OnClick="testJSONToolsCfg">
							<prop:ClientSide.OnLoading>
								bjsontools_hide_test_results();
								$('.config_test_loader').show();
							</prop:ClientSide.OnLoading>
							<prop:ClientSide.OnComplete>
								$('.config_test_loader').hide();
							</prop:ClientSide.OnComplete>
						</com:BActiveButton>
					</div>
				</div>
			</div>
		</com:TWizardStep>
		<com:TWizardStep ID="Step5" Title="<%[ Step 5 - enable actions for components ]%>" StepType="Auto">
			<p><%[ Do you want to setup start, stop and restart actions for Bacula components? If you define them, there will be possible to call these actions via API interface and by Baculum Web as well. ]%></p>
			<div class="line left">
				<com:TRadioButton ID="ActionsNo" GroupName="SelectActions" Attributes.onclick="$('#configure_actions').hide();" /> <com:TLabel ForControl="ActionsNo" Text="<%[ No ]%>" />
			</div>
			<div class="line left">
				<com:TRadioButton ID="ActionsYes" GroupName="SelectActions" Attributes.onclick="$('#configure_actions').show();" /> <com:TLabel ForControl="ActionsYes" Text="<%[ Yes ]%>" />
			</div>
			<div id="configure_actions" style="display: <%=($this->ActionsYes->Checked === true) ? 'block' : 'none';%>">
				<div id="actions_fields">
					<fieldset class="actions_field">
						<legend><%[ General configuration ]%></legend>
						<div class="actions_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="ActionsUseSudo" Text="<%[ Use sudo: ]%>" /></div>
								<div class="field">
									<com:TCheckBox ID="ActionsUseSudo" /> <a href="javascript:void(0)" onclick="get_sudo_config('actions');"><%[ Get sudo configuration ]%></a>
								</div>
							</div>
						</div>
					</fieldset>
					<fieldset class="actions_field">
						<legend>Director</legend>
						<div class="actions_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="DirStartAction" Text="<%[ Director start command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="DirStartAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestDirStartActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Start ]%>" OnCommand="testExecActionCommand" CommandParameter="dir_start">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestDirStartActionCommand->CommandParameter%>');
											$('#actions_test_result_dir_start .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_dir_start .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_dir_start">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="DirStopAction" Text="<%[ Director stop command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="DirStopAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestDirStopActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Stop ]%>" OnCommand="testExecActionCommand" CommandParameter="dir_stop">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestDirStopActionCommand->CommandParameter%>');
											$('#actions_test_result_dir_stop .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_dir_stop .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_dir_stop">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="DirRestartAction" Text="<%[ Director restart command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="DirRestartAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestDirRestartActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Restart ]%>" OnCommand="testExecActionCommand" CommandParameter="dir_restart">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestDirRestartActionCommand->CommandParameter%>');
											$('#actions_test_result_dir_restart .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_dir_restart .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_dir_restart">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
						</div>
					</fieldset>
					<fieldset class="actions_field">
						<legend>Storage Daemon</legend>
						<div class="actions_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="SdStartAction" Text="<%[ Storage Daemon start command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="SdStartAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestSdStartActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Start ]%>" OnCommand="testExecActionCommand" CommandParameter="sd_start">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestSdStartActionCommand->CommandParameter%>');
											$('#actions_test_result_sd_start .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_sd_start .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_sd_start">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="SdStopAction" Text="<%[ Storage Daemon stop command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="SdStopAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestSdStopActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Stop ]%>" OnCommand="testExecActionCommand" CommandParameter="sd_stop">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestSdStopActionCommand->CommandParameter%>');
											$('#actions_test_result_sd_stop .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_sd_stop .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_sd_stop">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="SdRestartAction" Text="<%[ Storage Daemon restart command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="SdRestartAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestSdRestartActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Restart ]%>" OnCommand="testExecActionCommand" CommandParameter="sd_restart">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestSdRestartActionCommand->CommandParameter%>');
											$('#actions_test_result_sd_restart .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_sd_restart .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_sd_restart">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
						</div>
					</fieldset>
					<fieldset class="actions_field">
						<legend>File Daemon/Client</legend>
						<div class="actions_lines">
							<div class="line left">
								<div class="text"><com:TLabel ForControl="FdStartAction" Text="<%[ File Daemon/Client start command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="FdStartAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestFdStartActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Start ]%>" OnCommand="testExecActionCommand" CommandParameter="fd_start">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestFdStartActionCommand->CommandParameter%>');
											$('#actions_test_result_fd_start .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_fd_start .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_fd_start">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="FdStopAction" Text="<%[ File Daemon/Client stop command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="FdStopAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestFdStopActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Stop ]%>" OnCommand="testExecActionCommand" CommandParameter="fd_stop">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestFdStopActionCommand->CommandParameter%>');
											$('#actions_test_result_fd_stop .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_fd_stop .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_fd_stop">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
							<div class="line left">
								<div class="text"><com:TLabel ForControl="FdRestartAction" Text="<%[ File Daemon/Client restart command: ]%>" /></div>
								<div class="field">
									<com:TTextBox ID="FdRestartAction" CssClass="textbox" />
								</div>
								<div class="button">
									<com:TActiveButton ID="TestFdRestartActionCommand" ValidationGroup="ActionsGroup" Text="<%[ Restart ]%>" OnCommand="testExecActionCommand" CommandParameter="fd_restart">
										<prop:ClientSide.OnLoading>
											actions_hide_test_results('<%=$this->TestFdRestartActionCommand->CommandParameter%>');
											$('#actions_test_result_fd_restart .action_test_loader').show();
										</prop:ClientSide.OnLoading>
										<prop:ClientSide.OnComplete>
											$('#actions_test_result_fd_restart .action_test_loader').hide();
										</prop:ClientSide.OnComplete>
									</com:TActiveButton>
								</div>
								<span id="actions_test_result_fd_restart">
									<span class="action_test_loader" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/ajax-loader.gif" alt="<%[ Loading... ]%>" /></span>
									<span class="action_success" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_ok.png" alt="<%[ OK ]%>" /> <%[ OK ]%></span>
									<span class="action_error" style="display: none"><img src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_err.png" alt="<%[ Error ]%>" /> <%[ Error ]%></span>
									<span class="action_result validator"></span>
								</span>
							</div>
						</div>
					</fieldset>
				</div>
			</div>
		</com:TWizardStep>
		<com:TWizardStep ID="Step6" Title="<%[ Step 6 - authentication to API ]%>" StepType="Auto">
			<div class="line left" style="width:500px; margin: 0 auto">
				<com:TActiveRadioButton
					ID="AuthOAuth2"
					GroupName="SelectAuth"
					Attributes.onclick="$('#configure_basic_auth').hide();$('#configure_oauth2_auth').show();"
				/>
				<com:TLabel
					ForControl="AuthOAuth2"
					Text="<%[ Use OAuth2 for authorization and authentication ]%>"
				/>
			</div>
			<div class="line left" style="width:500px; margin: 0 auto">
				<com:TActiveRadioButton
					ID="AuthBasic"
					GroupName="SelectAuth"
					Checked="true"
					Attributes.onclick="$('#configure_oauth2_auth').hide();$('#configure_basic_auth').show();"
				/>
				<com:TLabel
					ForControl="AuthBasic"
					Text="<%[ Use HTTP Basic authentication ]%>"
				/>
			</div>
			<div id="configure_basic_auth" style="display: <%=($this->AuthBasic->Checked === true) ? '' : 'none';%>">
				<com:TPanel Visible="<%=$this->first_run%>">
					<div class="line">
						<div class="text"><com:TLabel ForControl="APILogin" Text="<%[ Administration login: ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APILogin"
								CssClass="textbox"
								CausesValidation="false"
							/>
							<com:TRequiredFieldValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APILogin"
								ValidationGroup="Basic"
								Text="<%[ Please enter login. ]%>"
							/>
							<com:TRegularExpressionValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APILogin"
								ValidationGroup="Basic"
								RegularExpression="<%=BasicAPIUserConfig::USER_PATTERN%>"
								Text="<%[ Invalid login value. Login may contain a-z A-Z 0-9 characters. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="APIPassword" Text="<%[ Administration password: ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APIPassword"
								CssClass="textbox"
								TextMode="Password"
								MaxLength="60"
								PersistPassword="true"
							/>
							<com:TRequiredFieldValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIPassword"
								ValidationGroup="Basic"
								Text="<%[ Please enter password. ]%>"
							/>
							<com:TRegularExpressionValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIPassword"
								RegularExpression="[\S\s]{5,60}"
								ValidationGroup="Basic"
								Text="<%[ Password must be longer than 4 chars. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="RetypeAPIPassword" Text="<%[ Retype administration password: ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="RetypeAPIPassword"
								CssClass="textbox"
								TextMode="Password"
								MaxLength="60"
								PersistPassword="true"
							/>
							<com:TRequiredFieldValidator
								ID="RetypePasswordRequireValidator"
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="RetypeAPIPassword"
								ValidationGroup="Basic"
								Text="<%[ Please enter retype password. ]%>"
							/>
							<com:TRegularExpressionValidator
								ID="RetypePasswordRegexpValidator"
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="RetypeAPIPassword"
								RegularExpression="[\S\s]{5,60}"
								ValidationGroup="Basic"
								Text="<%[ Password must be longer than 4 chars. ]%>"
							/>
							<com:TCompareValidator
								ID="RetypePasswordCustomValidator"
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="RetypeAPIPassword"
								ControlToCompare="APIPassword"
								ValidationGroup="Basic"
								Text="<%[ Passwords must be the same. ]%>"
							/>
						</div>
					</div>
				</com:TPanel>
			</div>
			<div id="configure_oauth2_auth" style="display: <%=$this->AuthOAuth2->Checked ? '' : 'none';%>">
				<com:TPanel Visible="<%=($this->first_run || $this->add_auth_params)%>">
					<h3><%[ First client registration ]%></h3>
					<h4><%[ Please do not forget to disable HTTP Basic auth in the API web server config. Othwerise OAuth2 will not work. ]%></h4>
					<div class="line">
						<div class="text"><com:TLabel ForControl="APIOAuth2ClientId" Text="<%[ OAuth2 Client ID: ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APIOAuth2ClientId"
								CssClass="textbox"
								CausesValidation="false"
								MaxLength="32"
							/>
							<com:TRequiredFieldValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIOAuth2ClientId"
								ValidationGroup="OAuth2"
								Text="<%[ Please enter Client ID. ]%>"
							/>
							<com:TRegularExpressionValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIOAuth2ClientId"
								RegularExpression="<%=OAuth2::CLIENT_ID_PATTERN%>"
								ValidationGroup="OAuth2"
								Text="<%[ Invalid Client ID value. Client ID may contain a-z A-Z 0-9 - _ characters. ]%>"
								/>
							<a href="javascript:void(0)" onclick="document.getElementById('<%=$this->APIOAuth2ClientId->ClientID%>').value = get_random_string('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_', 32); return false;"><%[ generate ]%></a>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="APIOAuth2ClientSecret" Text="<%[ OAuth2 Client Secret: ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APIOAuth2ClientSecret"
								CssClass="textbox"
								CausesValidation="false"
								MaxLength="50"
							/>
							<com:TRequiredFieldValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIOAuth2ClientSecret"
								ValidationGroup="OAuth2"
								Text="<%[ Please enter Client Secret. ]%>"
							/>
							<com:TRegularExpressionValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIOAuth2ClientSecret"
								RegularExpression="<%=OAuth2::CLIENT_SECRET_PATTERN%>"
								ValidationGroup="OAuth2"
								Text="<%[ Invalid Client Secret value. Client Secret may contain any character that is not a whitespace character. ]%>"
							/>
							<a href="javascript:void(0)" onclick="document.getElementById('<%=$this->APIOAuth2ClientSecret->ClientID%>').value = get_random_string('ABCDEFabcdef0123456789', 40); return false;"><%[ generate ]%></a>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="APIOAuth2RedirectURI" Text="<%[ OAuth2 Redirect URI (example: https://baculumgui:9095/web/redirect): ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APIOAuth2RedirectURI"
								CssClass="textbox"
								CausesValidation="false"
							/>
							<com:TRequiredFieldValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIOAuth2RedirectURI"
								ValidationGroup="OAuth2"
								Text="<%[ Please enter Redirect URI. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="APIOAuth2Scope" Text="<%[ OAuth2 scopes (space separated): ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APIOAuth2Scope"
								CssClass="textbox"
								CausesValidation="false"
								TextMode="MultiLine"
							/>
							<a href="javascript:void(0)" onclick="set_scopes('<%=$this->APIOAuth2Scope->ClientID%>'); return false;" style="vertical-align: top"><%[ set all scopes ]%></a>
							<com:TRequiredFieldValidator
								CssClass="validator-block"
								Display="Dynamic"
								ControlCssClass="invalidate"
								ControlToValidate="APIOAuth2Scope"
								ValidationGroup="OAuth2"
								Text="<%[ Please enter OAuth2 scopes. ]%>"
							/>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="APIOAuth2BconsoleCfgPath" Text="<%[ Dedicated Bconsole config file path: ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APIOAuth2BconsoleCfgPath"
								CssClass="textbox"
								CausesValidation="false"
								ValidationGroup="OAuth2"
							/> <%[ (optional) ]%>
						</div>
					</div>
					<div class="line">
						<div class="text"><com:TLabel ForControl="APIOAuth2Name" Text="<%[ Short name: ]%>" /></div>
						<div class="field">
							<com:TTextBox
								ID="APIOAuth2Name"
								CssClass="textbox"
								CausesValidation="false"
							/> <%[ (optional) ]%>
						</div>
					</div>
				</com:TPanel>
			</div>
			<script type="text/javascript">
				var wizard_validation = function() {
					var basic = document.getElementById('<%=$this->AuthBasic->ClientID%>');
					var oauth2 = document.getElementById('<%=$this->AuthOAuth2->ClientID%>');
					var validation_group;
					if (basic.checked === true) {
						validation_group = 'Basic';
					} else if (oauth2.checked === true) {
						validation_group = 'OAuth2';
					}
					return Prado.Validation.validate(Prado.Validation.getForm(), validation_group);
				}
			</script>
		</com:TWizardStep>
		<com:TWizardStep ID="Step7" Title="<%[ Step 7 - Finish ]%>" StepType="Finish">
			<fieldset>
				<legend><%[ Catalog API ]%></legend>
				<div style="display: <%=($this->DatabaseYes->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Database type: ]%></div>
						<div class="field bold"><%=$this->getDbNameByType($this->DBType->SelectedValue)%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Database name: ]%></div>
						<div class="field bold"><%=$this->DBName->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Login: ]%></div>
						<div class="field bold"><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? $this->Login->Text : '-'%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Password: ]%></div>
						<div class="field bold"><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? preg_replace('/.{1}/', '*', $this->Password->Text) : '-'%></div>
					</div>
					<div class="line">
						<div class="text"><%[ IP address (or hostname): ]%></div>
						<div class="field bold"><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? $this->IP->Text : '-'%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Database port: ]%></div>
						<div class="field bold"><%=$this->isSQLiteType($this->DBType->SelectedValue) === false ? $this->Port->Text : '-'%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Database file path (SQLite only): ]%></div>
						<div class="field bold"><%=$this->isSQLiteType($this->DBType->SelectedValue) === true ? $this->DBPath->Text : '-'%></div>
					</div>
				</div>
				<div style="display: <%=($this->DatabaseNo->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Catalog access: ]%></div>
						<div class="field bold"><%[ Disabled ]%></div>
					</div>
				</div>
			</fieldset>
			<fieldset>
				<legend><%[ Console API ]%></legend>
				<div style="display: <%=($this->ConsoleYes->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Bconsole binary file path: ]%></div>
						<div class="field bold"><%=$this->BconsolePath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Bconsole admin config file path: ]%></div>
						<div class="field bold"><%=$this->BconsoleConfigPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Use sudo for bconsole requests: ]%></div>
						<div class="field bold"><%=($this->UseSudo->Checked === true) ? 'yes' : 'no'%></div>
					</div>
				</div>
				<div style="display: <%=($this->ConsoleNo->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Console access: ]%></div>
						<div class="field bold"><%[ Disabled ]%></div>
					</div>
				</div>
			</fieldset>
			<fieldset>
				<legend><%[ Config API ]%></legend>
				<div style="display: <%=($this->ConfigYes->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Directory path for new config files: ]%></div>
						<div class="field bold"><%=$this->BConfigDir->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Use sudo for Bacula JSON tools: ]%></div>
						<div class="field bold"><%=($this->BJSONUseSudo->Checked === true) ? 'yes' : 'no'%></div>
					</div>
					<div class="line">
						<div class="text"><%[ bdirjson binary file path: ]%></div>
						<div class="field bold"><%=$this->BDirJSONPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Main Director config file path: ]%></div>
						<div class="field bold"><%=$this->DirCfgPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ bsdjson binary file path: ]%></div>
						<div class="field bold"><%=$this->BSdJSONPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Main Storage Daemon config file path: ]%></div>
						<div class="field bold"><%=$this->SdCfgPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ bfdjson binary file path: ]%></div>
						<div class="field bold"><%=$this->BFdJSONPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Main Client config file path: ]%></div>
						<div class="field bold"><%=$this->FdCfgPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ bbconsjson binary file path: ]%></div>
						<div class="field bold"><%=$this->BBconsJSONPath->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Main Bconsole config file path: ]%></div>
						<div class="field bold"><%=$this->BconsCfgPath->Text%></div>
					</div>
				</div>
				<div style="display: <%=($this->ConfigNo->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Config access: ]%></div>
						<div class="field bold"><%[ Disabled ]%></div>
					</div>
				</div>
			</fieldset>
			<fieldset>
				<legend><%[ Actions ]%></legend>
				<div style="display: <%=($this->ActionsYes->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Use sudo for actions: ]%></div>
						<div class="field bold"><%=($this->ActionsUseSudo->Checked === true) ? 'yes' : 'no'%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Director start command: ]%></div>
						<div class="field bold"><%=$this->DirStartAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Director stop command: ]%></div>
						<div class="field bold"><%=$this->DirStopAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Director restart command: ]%></div>
						<div class="field bold"><%=$this->DirRestartAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Storage Daemon start command: ]%></div>
						<div class="field bold"><%=$this->SdStartAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Storage Daemon stop command: ]%></div>
						<div class="field bold"><%=$this->SdStopAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ Storage Daemon restart command: ]%></div>
						<div class="field bold"><%=$this->SdRestartAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ File Daemon/Client start command: ]%></div>
						<div class="field bold"><%=$this->FdStartAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ File Daemon/Client stop command: ]%></div>
						<div class="field bold"><%=$this->FdStopAction->Text%></div>
					</div>
					<div class="line">
						<div class="text"><%[ File Daemon/Client restart command: ]%></div>
						<div class="field bold"><%=$this->FdRestartAction->Text%></div>
					</div>
				</div>
				<div style="display: <%=($this->ActionsNo->Checked ? 'block' : 'none')%>">
					<div class="line">
						<div class="text"><%[ Actions setting: ]%></div>
						<div class="field bold"><%[ Disabled ]%></div>
					</div>
				</div>
			</fieldset>
			<fieldset>
				<legend><%[ Authentication to Baculum REST API ]%></legend>
				<div class="line">
					<div class="text"><%[ Authentication type: ]%></div>
					<div class="field bold">
						<%=$this->AuthBasic->Checked ? 'HTTP Basic' : ''%>
						<%=$this->AuthOAuth2->Checked ? 'OAuth2' : ''%>
					</div>
				</div>
				<com:TPanel Visible="<%=$this->first_run%>">
					<div style="display: <%=$this->AuthBasic->Checked ? 'block' : 'none'%>">
						<div class="line">
							<div class="text"><%[ Administration login: ]%></div>
							<div class="field bold"><%=$this->APILogin->Text%></div>
						</div>
						<div class="line">
							<div class="text"><%[ Administration password: ]%></div>
							<div class="field bold"><%=preg_replace('/.{1}/', '*', $this->APIPassword->Text)%></div>
						</div>
					</div>
				</com:TPanel>
				<com:TPanel Visible="<%=($this->first_run || $this->add_auth_params)%>">
					<div style="display: <%=$this->AuthOAuth2->Checked ? 'block' : 'none'%>">
						<div class="line">
							<div class="text">Client ID:</div>
							<div class="field bold"><%=$this->APIOAuth2ClientId->Text%></div>
						</div>
						<div class="line">
							<div class="text">Client Secret:</div>
							<div class="field bold"><%=preg_replace('/.{1}/', '*', $this->APIOAuth2ClientSecret->Text)%></div>
						</div>
						<div class="line">
							<div class="text">Redirect URI:</div>
							<div class="field bold"><%=$this->APIOAuth2RedirectURI->Text%></div>
						</div>
						<div class="line">
							<div class="text">Scope:</div>
							<div class="field bold"><%=$this->APIOAuth2Scope->Text%></div>
						</div>
						<div class="line">
							<div class="text"><%[ Dedicated Bconsole config file path: ]%></div>
							<div class="field bold"><%=!empty($this->APIOAuth2BconsoleCfgPath->Text) ? $this->APIOAuth2BconsoleCfgPath->Text : '-'%></div>
						</div>
					</div>
				</com:TPanel>
			</fieldset>
		</com:TWizardStep>
	</com:TWizard>
<com:TJuiDialog
	ID="SudoConfigPopup"
	Options.title="<%[ Sudo configuration ]%>"
	Options.autoOpen="false",
	Options.minWidth="600"
	Options.minHeight="200"
>
	<p><%[ Please copy appropriate sudo configuration and put it to a new sudoers.d file for example /etc/sudoers.d/baculum-api ]%></p>
	<p><strong><%[ Note ]%></strong> <%[ Please use visudo to add this configuration, otherwise please do remember to add empty line at the end of file. ]%>
	<p><%[ Example sudo configuration for Apache web server user (RHEL, CentOS and others): ]%></p>
	<pre id="sudo_config_apache"></pre>
	<p><%[ Example sudo configuration for Lighttpd web server user (RHEL, CentOS and others): ]%></p>
	<pre id="sudo_config_lighttpd"></pre>
	<p><%[ Example sudo configuration for Apache and Lighttpd web servers user (Debian, Ubuntu and others): ]%></p>
	<pre id="sudo_config_www_data"></pre>
</com:TJuiDialog>
<script type="text/javascript">
var bjsontools_fields = {
	General: {
		data: [],
		test: [$('#<%=$this->BConfigDirTestOk->ClientID%>'), $('#<%=$this->BConfigDirTestErr->ClientID%>')]
	},
	Dir: {
		data: [$('#<%=$this->BDirJSONPath->ClientID%>'), $('#<%=$this->DirCfgPath->ClientID%>')],
		test: [$('#<%=$this->BDirJSONPathTestOk->ClientID%>'), $('#<%=$this->BDirJSONPathTestErr->ClientID%>')]
	},
	Sd: {
		data: [$('#<%=$this->BSdJSONPath->ClientID%>'), $('#<%=$this->SdCfgPath->ClientID%>')],
		test: [$('#<%=$this->BSdJSONPathTestOk->ClientID%>'), $('#<%=$this->BSdJSONPathTestErr->ClientID%>')]
	},
	Fd: {
		data: [$('#<%=$this->BFdJSONPath->ClientID%>'), $('#<%=$this->FdCfgPath->ClientID%>')],
		test: [$('#<%=$this->BFdJSONPathTestOk->ClientID%>'), $('#<%=$this->BFdJSONPathTestErr->ClientID%>')]
	},
	Bcons: {
		data: [$('#<%=$this->BBconsJSONPath->ClientID%>'), $('#<%=$this->BconsCfgPath->ClientID%>')],
		test: [$('#<%=$this->BBconsJSONPathTestOk->ClientID%>'), $('#<%=$this->BBconsJSONPathTestErr->ClientID%>')]
	}
};
var bjsontools_get_field_type = function(field_id) {
	var field_types = Object.keys(bjsontools_fields);
	var type, field_type;
	for (var i = 0; i < field_types.length; i++) {
		type = field_types[i];
		for (var j = 0; j < bjsontools_fields[type].data.length; j++) {
			if (bjsontools_fields[type].data[j][0].id === field_id) {
				field_type = type;
				break;
			}
		}
		if (field_type) {
			break;
		}
	}
	return field_type;
};
var bjsontools_validator = function(sender, parameter) {
	var validation_css = 'validation-error';
	var id_validating_field = sender.control.id;
	var type = bjsontools_get_field_type(id_validating_field);
	var invalid_fields = [];
	for (var i = 0; i < bjsontools_fields[type].data.length; i++) {
		bjsontools_fields[type].data[i].removeClass(validation_css);
		if (!bjsontools_fields[type].data[i][0].value) {
			invalid_fields.push(bjsontools_fields[type].data[i]);
		}
	}
	var valid = (invalid_fields.length === 0 || invalid_fields.length === bjsontools_fields[type].data.length);
	var is_validating_field_valid = true;
	if (!valid) {
		for (var i = 0; i < invalid_fields.length; i++) {
			invalid_fields[i].addClass(validation_css);
			if (invalid_fields[i][0].id === id_validating_field) {
				is_validating_field_valid = false;
			}
		}
		bjsontools_hide_test_results(type);
	}
	if (is_validating_field_valid === true) {
		valid = true;
	}

	return valid;
};

// if field_type not given then all test results become hidden
var bjsontools_hide_test_results = function(field_type) {
	var field_types = Object.keys(bjsontools_fields);
	var type;
	for (var i = 0; i < field_types.length; i++) {
		type = field_types[i];
		for (var j = 0; j < bjsontools_fields[type].test.length; j++) {
			if (!field_type || field_type === type) {
				bjsontools_fields[type].test[j].hide();
			}
		}
	}
};

var set_action_command_output = function(action, result) {
	var result_el = document.querySelector('#actions_test_result_' + action + ' .action_result');
	if (result.error === 0) {
		var success = document.querySelector('#actions_test_result_' + action + ' .action_success');
		success.style.display = '';
		result_el.textContent = '';
	} else {
		var error = document.querySelector('#actions_test_result_' + action + ' .action_error');
		error.style.display = '';
		result_el.innerHTML = '<br />' + result.output.join('<br />');
	}
};

var actions_hide_test_results = function(action) {
	var loader = document.querySelector('#actions_test_result_' + action + ' .action_test_loader');
	var success = document.querySelector('#actions_test_result_' + action + ' .action_success');
	var error = document.querySelector('#actions_test_result_' + action + ' .action_error');
	var result = document.querySelector('#actions_test_result_' + action + ' .action_result');
	loader.style.display = 'none';
	success.style.display = 'none'
	error.style.display = 'none';
	result.textContent = '';
};

function get_sudo_config(type) {
	var bin_fields = {
		bconsole: [
			'<%=$this->BconsolePath->ClientID%>'
		],
		config: [
			'<%=$this->BDirJSONPath->ClientID%>',
			'<%=$this->BSdJSONPath->ClientID%>',
			'<%=$this->BFdJSONPath->ClientID%>',
			'<%=$this->BBconsJSONPath->ClientID%>',
		],
		actions: [
			'<%=$this->DirStartAction->ClientID%>',
			'<%=$this->DirStopAction->ClientID%>',
			'<%=$this->DirRestartAction->ClientID%>',
			'<%=$this->SdStartAction->ClientID%>',
			'<%=$this->SdStopAction->ClientID%>',
			'<%=$this->SdRestartAction->ClientID%>',
			'<%=$this->FdStartAction->ClientID%>',
			'<%=$this->FdStopAction->ClientID%>',
			'<%=$this->FdRestartAction->ClientID%>'
		]
	}
	var val, pre;
	var cfg = '';
	var users = ['apache', 'lighttpd', 'www-data'];
	var fields = bin_fields.hasOwnProperty(type) ? bin_fields[type] : [];
	for (var i = 0; i < users.length; i++) {
		var pre = document.getElementById('sudo_config_' + users[i].replace(/-/g, '_'));
		pre.textContent = 'Defaults:' + users[i] + ' !requiretty' + "\n";
		for (var j = 0; j < fields.length; j++) {
			val = document.getElementById(fields[j]).value.trim();
			if (val) {
				pre.textContent += users[i] + ' ALL = (root) NOPASSWD: ' + val + "\n";
			}
		}
	}
	$('#<%=$this->SudoConfigPopup->ClientID%>').dialog('open');
}
</script>
</com:TContent>
