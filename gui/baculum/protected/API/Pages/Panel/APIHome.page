<%@ MasterClass="Application.API.Layouts.Main" Theme="Baculum-v1"%>
<com:TContent ID="Main">
	<com:BClientScript ScriptUrl=<%~ ../../JavaScript/misc.js %> />
	<h3 style="clear: left"><%[ Welcome on the Baculum API default page ]%> <input type="button" class="bbutton" onclick="window.location.href='<%=$this->getService()->constructUrl('Panel.APIInstallWizard')%>'" value="<%[ Go to configuration wizard ]%>" style="float: right" /></h3>
	<div id="tabs">
		<ul>
			<li><a href="#tab1"><%[ Baculum API Client ]%></a></li>
			<li><a href="#tab2"><%[ List HTTP Basic users ]%></a></li>
			<li><a href="#tab3"><%[ List OAuth2 clients ]%></a></li>
		</ul>
		<div id="tab1">
			<p><%[ Here you can try one from API commands ]%></p>
			<div>
				<com:TJuiProgressbar ID="Progress" Options.Max="3" Options.Value="false" Width="700px" CssClass="center" Style="float: left">
					<span id="progress_label"><%[ Starting... ]%></span>
				</com:TJuiProgressbar>
				<img id="api_refresh" src="<%=$this->getPage()->getTheme()->getBaseUrl()%>/icon_refresh.png" alt="<%[ Refresh token ]%>" title="<%[ Refresh token ]%>" onclick="oAPIHome.init_oauth2_client();" />
			</div>
			<div class="line" id="auth_params_combo_container" style="margin-top: 10px; width: 700px; display: none">
				<div class="text"><com:TLabel ForControl="AuthParamsCombo" Text="<%[ Select: ]%>" /></div>
				<div class="field">
					<com:TActiveDropDownList ID="AuthParamsCombo" AutoPostBack="false" />
				</div>
			</div>
			<div style="clear: left; margin-top: 60px;">
				<select id="section" class="api_select">
					<option value="none"><%[ Please select API endpoint ]%></option>
					<option value="storages">storages</option>
					<option value="clients">clients</option>
					<option value="volumes">volumes</option>
					<option value="jobs">jobs</option>
					<option value="joblog">joblog</option>
					<option value="bvfs">bvfs</option>
				</select>
				<input id="api_command" name="command" onkeydown="if (event.keyCode == 13) { oAPIHome.send_request(); }" /> <input class="api_button" type="button" name="apply" value="<%[ Send request ]%>" onclick="oAPIHome.send_request();" />
			</div>
			<div id="api_output">
				<pre id="api_result"></pre>
			</div>
		</div>
		<div id="tab2">
			<input type="button" class="bbutton" onclick="$('#<%=$this->NewBasicClient->ClientID%>new_auth_client').slideToggle();" value="<%[ New HTTP Basic user ]%>" />
			<com:Application.Common.Portlets.NewAuthClient ID="NewBasicClient" AuthType="basic" OnCallback="loadBasicUsers" />
			<com:TActiveDataGrid
				ID="BasicClientList"
				AutoGenerateColumns="false"
				CellPadding="2"
				AlternatingItemStyle.BackColor="#4e4e50"
				CssClass="tab-grid"
			>
				<com:TBoundColumn
					ID="BasicUsernameColumn"
					HeaderText="<%[ Username ]%>"
					DataField="username"
				/>
				<com:TTemplateColumn
					ID="BasicDeleteColumn"
					HeaderText="<%[ Delete ]%>"
					ItemStyle.HorizontalAlign="Center"
				>
				<prop:ItemTemplate>
					<com:TActiveLinkButton
						Text="<%[ Delete ]%>"
						OnCommand="SourceTemplateControl.deleteBasicItem"
						CommandParameter="<%#$this->getParent()->Data['username']%>"
						Attributes.onclick="return confirm('<%[ Are you sure? ]%>')"
						Visible="<%=($this->getParent()->getParent()->getItemCount() > 1)%>"
					/>
				</prop:ItemTemplate>
				</com:TTemplateColumn>
			</com:TActiveDataGrid>
		</div>
		<div id="tab3">
			<input type="button" class="bbutton" onclick="$('#<%=$this->NewOAuth2Client->ClientID%>new_auth_client').slideToggle();" value="<%[ New OAuth2 client ]%>" />
			<com:Application.Common.Portlets.NewAuthClient ID="NewOAuth2Client" AuthType="oauth2" OnCallback="loadOAuth2Users" />
			<com:TActiveDataGrid
				ID="OAuth2ClientList"
				AutoGenerateColumns="false"
				CellPadding="2"
				AlternatingItemStyle.BackColor="#4e4e50"
				CssClass="tab-grid"
			>
				<com:TBoundColumn
					HeaderText="<%[ Name ]%>"
					DataField="name"
				/>
				<com:TBoundColumn
					ID="ClientIDColumn"
					HeaderText="<%[ Client ID ]%>"
					DataField="client_id"
				/>
				<com:TBoundColumn
					HeaderText="<%[ Redirect URI ]%>"
					DataField="redirect_uri"
				/>
				<com:TTemplateColumn
					ID="OAuth2DeleteColumn"
					HeaderText="<%[ Delete ]%>"
					ItemStyle.HorizontalAlign="Center"
				>
				<prop:ItemTemplate>
					<com:TActiveLinkButton
						Text="<%[ Edit ]%>"
						OnCommand="SourceTemplateControl.editOAuth2Item"
						CommandParameter="<%#$this->getParent()->Data['client_id']%>"
					/>
					<com:TActiveLinkButton
						Text="<%[ Delete ]%>"
						OnCommand="SourceTemplateControl.deleteOAuth2Item"
						CommandParameter="<%#$this->getParent()->Data['client_id']%>"
						Attributes.onclick="if(!confirm('<%[ Are you sure? ]%>')) return false;"
						Visible="<%=($this->getParent()->getParent()->getItemCount() > 1)%>"
					/>
				</prop:ItemTemplate>
				</com:TTemplateColumn>
			</com:TActiveDataGrid>
		</div>
		<com:TJuiDialog
			ID="APIOAuth2EditPopup"
			Options.Title="<%[ Edit OAuth2 client parameters ]%>"
			Options.AutoOpen="False"
			Options.Width="700px"
		>
			<com:TPanel DefaultButton="APIOAuth2SaveBtn">
			<div class="line">
				<div class="text"><com:TLabel ForControl="APIOAuth2ClientId" Text="<%[ OAuth2 Client ID: ]%>" /></div>
				<div class="field">
					<com:TActiveTextBox
						ID="APIOAuth2ClientId"
						CssClass="textbox"
						ReadOnly="true"
					/>
				</div>
			</div>
			<div class="line">
				<div class="text"><com:TLabel ForControl="APIOAuth2ClientSecret" Text="<%[ OAuth2 Client Secret: ]%>" /></div>
				<div class="field">
					<com:TActiveTextBox
						ID="APIOAuth2ClientSecret"
						CssClass="textbox"
						CausesValidation="false"
						MaxLength="40"
					/>
					<com:TRequiredFieldValidator
						CssClass="validator-block"
						Display="Dynamic"
						ControlCssClass="invalidate"
						ControlToValidate="APIOAuth2ClientSecret"
						ValidationGroup="APIOAuth2Edit"
						Text="<%[ Please enter Client Secret. ]%>"
					/>
					<com:TRegularExpressionValidator
						CssClass="validator-block"
						Display="Dynamic"
						ControlCssClass="invalidate"
						ControlToValidate="APIOAuth2ClientSecret"
						RegularExpression="<%=OAuth2::CLIENT_SECRET_PATTERN%>"
						ValidationGroup="APIOAuth2Edit"
						Text="<%[ Invalid Client Secret value. Client Secret may contain any character that is not a whitespace character. ]%>"
					/>
					<a href="javascript:void(0)" onclick="document.getElementById('<%=$this->APIOAuth2ClientSecret->ClientID%>').value = get_random_string('ABCDEFabcdef0123456789', 40); return false;"><%[ generate ]%></a>
				</div>
			</div>
			<div class="line">
				<div class="text"><com:TLabel ForControl="APIOAuth2RedirectURI" Text="<%[ OAuth2 Redirect URI (example: https://baculumgui:9095/web/redirect): ]%>" /></div>
				<div class="field">
					<com:TActiveTextBox
						ID="APIOAuth2RedirectURI"
						CssClass="textbox"
						CausesValidation="false"
					/>
					<com:TRequiredFieldValidator
						CssClass="validator-block"
						Display="Dynamic"
						ControlCssClass="invalidate"
						ControlToValidate="APIOAuth2RedirectURI"
						ValidationGroup="APIOAuth2Edit"
						Text="<%[ Please enter Redirect URI. ]%>"
					/>
				</div>
			</div>
			<div class="line">
				<div class="text"><com:TLabel ForControl="APIOAuth2Scope" Text="<%[ OAuth2 scopes (space separated): ]%>" /></div>
				<div class="field">
					<com:TActiveTextBox
						ID="APIOAuth2Scope"
						CssClass="textbox"
						CausesValidation="false"
						TextMode="MultiLine"
					/>
					<a href="javascript:void(0)" onclick="set_scopes('<%=$this->APIOAuth2Scope->ClientID%>'); return false;" style="vertical-align: top"><%[ set all scopes ]%></a>
					<com:TRequiredFieldValidator
						CssClass="validator-block"
						Display="Dynamic"
						ControlCssClass="invalidate"
						ControlToValidate="APIOAuth2Scope"
						ValidationGroup="APIOAuth2Edit"
						Text="<%[ Please enter OAuth2 scopes. ]%>"
					/>
				</div>
			</div>
			<div class="line">
				<div class="text"><com:TLabel ForControl="APIOAuth2BconsoleCfgPath" Text="<%[ Dedicated Bconsole config file path: ]%>" /></div>
				<div class="field">
					<com:TActiveTextBox
						ID="APIOAuth2BconsoleCfgPath"
						CssClass="textbox"
						CausesValidation="false"
					/> <%[ (optional) ]%>
				</div>
			</div>
			<div class="line">
				<div class="text"><com:TLabel ForControl="APIOAuth2Name" Text="<%[ Short name: ]%>" /></div>
				<div class="field">
					<com:TActiveTextBox
						ID="APIOAuth2Name"
						CssClass="textbox"
						CausesValidation="false"
					/> <%[ (optional) ]%>
				</div>
			</div>
			<div class="center">
				<com:BButton
					Text="<%[ Cancel ]%>"
					CausesValidation="false"
					Attributes.onclick="$('#<%=$this->APIOAuth2EditPopup->ClientID%>').dialog('close'); return false;"
				/>
				<com:BActiveButton
					ID="APIOAuth2SaveBtn"
					ValidationGroup="APIOAuth2Edit"
					OnCommand="TemplateControl.saveOAuth2Item"
					Text="<%[ Save ]%>"
				>
				</com:BActiveButton>
			</div>
			</com:TPanel>
		</com:TJuiDialog>
	</div>
	<com:TActiveHiddenField ID="AuthParamsInput" />
	<com:TCallback ID="AuthParamsCallback" OnCallback="setAuthParams">
		<prop:ClientSide.OnComplete>
			oAPIHome.set_auth_params();
			oAPIHome.init_auth();
		</prop:ClientSide.OnComplete>
	</com:TCallback>
	<com:TClientScript>
		var oAPIHome = {
			ids: {
				section: 'section',
				command: 'api_command',
				result: 'api_result',
				progress_bar: '<%=$this->Progress->ClientID%>',
				progress_label: 'progress_label',
				refresh_token: 'api_refresh',
				auth_params_combo_container: 'auth_params_combo_container',
				auth_params_combo: '<%=$this->AuthParamsCombo->ClientID%>',
				auth_params_input: '<%=$this->AuthParamsInput->ClientID%>'
			},
			default_commands: {
				storages: '/api/v1/storages/',
				clients: '/api/v1/clients?limit=5',
				volumes: '/api/v1/volumes?limit=4',
				jobs: '/api/v1/jobs?limit=10',
				joblog: '/api/v1/joblog/1/',
				bvfs: '/api/v1/bvfs/lsdirs?jobids=1&path=&limit=8'
			},
			token: null,
			auth_params_cb: <%=$this->AuthParamsCallback->ActiveControl->Javascript%>,
			init: function() {
				this.set_events();
				this.set_auth_params();
				this.init_auth();
				this.init_tabs();
				this.change_auth_params();
			},
			init_auth: function() {
				if (typeof(this.baculum_auth) == 'object') {
					if (this.baculum_auth.auth_type == 'oauth2') {
						document.getElementById(this.ids.auth_params_combo_container).style.display = '';
						this.init_oauth2_client();
					} else if (this.baculum_auth.auth_type == 'basic') {
						this.init_basic();
					}
				}
			},
			set_auth_params: function() {
				var params = document.getElementById(this.ids.auth_params_input).value;
				this.baculum_auth = JSON.parse(params);
			},
			set_progress: function(value, text) {
				$('#' + this.ids.progress_bar).progressbar('value', value);
				$('#' + this.ids.progress_label).text(text);
			},
			init_tabs: function() {
				$('#tabs').tabs({active: 0});
			},
			init_basic: function() {
				this.set_progress(3, '<%[ Basic auth ready... ]%>');
				document.getElementById(this.ids.refresh_token).style.display = 'none';
			},
			init_oauth2_client: function() {
				if (this.baculum_auth && !this.baculum_auth.hasOwnProperty('client_id')) {
					// no client id, no client initialization
					// Posibly case when first (default) API client is not able to get token
					return;
				}
				this.set_progress(1, 'Sending auth code request...');
				var authorization_uri = document.location.origin + '/api/auth';
				var auth_params = {
					response_type: 'code',
					client_id: this.baculum_auth.client_id,
					redirect_uri: this.baculum_auth.redirect_uri,
					scope: this.baculum_auth.scope.join(' ')
				};
				var uri = authorization_uri + '?' + $.param(auth_params);
				var xhr = new XMLHttpRequest();
				xhr.open('GET', uri, true);
				xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
				xhr.onreadystatechange = function() {
					if (xhr.readyState == 4 && xhr.status == 200) {
						var code_regex = /code=([\w]+)$/;
						result = xhr.responseURL.match(code_regex);
						if (result) {
							this.send_token_request(result[1])
						}
					}
				}.bind(this);
				xhr.send();
			},
			send_token_request: function(code) {
				this.set_progress(2, 'Sending token request...');
				var uri = document.location.origin + '/api/token';
				var auth_params = {
					grant_type: 'authorization_code',
					code: code,
					client_id: this.baculum_auth.client_id,
					client_secret: this.baculum_auth.client_secret,
					redirect_uri: this.baculum_auth.redirect_uri
				};
				var request = $.ajax({
					url: uri,
					type: 'POST',
					data: auth_params,
					dataType: 'json'
				});
				request.done(function(data) {
					if (typeof(data) == 'object' && data.hasOwnProperty('access_token')) {
						this.token = data.access_token;
						this.set_progress(3, '<%[ Access token: ]%> ' + this.token);
					}
				}.bind(this));
			},
			set_events: function() {
				document.getElementById(this.ids.section).addEventListener('change', function(e) {
					var el = e.srcElement || e.target;
					this.set_default_command(el.value);
				}.bind(this));
				var auth_params_combo = document.getElementById(this.ids.auth_params_combo);
				auth_params_combo.addEventListener('change', this.change_auth_params.bind(this));
			},
			change_auth_params: function(e) {
				var auth_params_combo = document.getElementById(this.ids.auth_params_combo);
				this.auth_params_cb.setCallbackParameter(auth_params_combo.value)
				this.auth_params_cb.dispatch();
			},
			set_default_command: function(section) {
				if (this.default_commands.hasOwnProperty(section)) {
					document.getElementById(this.ids.command).value = this.default_commands[section];
				}
			},
			send_request: function() {
				var url = document.getElementById(this.ids.command).value;
				var headers = {};
				if (this.baculum_auth.auth_type == 'oauth2' && this.token) {
					headers = {'Authorization': 'Bearer ' + this.token};
				} else if (this.baculum_auth.auth_type == 'basic') {
					// Password is not known so don't send auth header (it should be inherited automatically)
					// headers = {'Authorization': 'Basic ' + btoa(this.baculum_auth.login + ":" + this.baculum_auth.password)};
				}
				this.clear_result();
				var request = $.ajax({
					url: url,
					type: 'GET',
					dataType: 'json',
					headers: headers
				});
				request.done(function(data) {
					this.show_result(data);
				}.bind(this));
			},
			show_result: function(data) {
				document.getElementById(this.ids.result).textContent = JSON.stringify(data, null, 2);
			},
			clear_result: function() {
				document.getElementById(this.ids.result).textContent = '';
			}
		};
		$(function() {
			oAPIHome.init();
		})
	</com:TClientScript>
</com:TContent>
